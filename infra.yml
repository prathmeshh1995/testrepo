resources:
  repositories:
    - repository: IaC-Automation
      type: git
      endpoint: IaC-Repo-Connection
      name: YASH-IaC-Centralized-AWS/IaC-Automation
      ref: refs/heads/main

variables:
- group: AWS-iaC

- name: S3
  value: 'true'

- name: SecretManager
  value: 'true'

- name: VPC
  value: 'false'

- name: SNS
  value: 'false'

- name: Lambda
  value: 'false'

- name: AtehnaWG
  value: 'false'

- name: GlueJob
  value: 'false'

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- checkout: IaC-Automation
- checkout: self

- task: CloudFormationCreateOrUpdateStack@1
  displayName: S3 Template
  condition: eq('${{ variables.S3}}', 'true')
  inputs:
    awsCredentials: '$(ServiceConnection)'
    regionName: 'us-east-1'
    stackName: '$(StackName)'
    templateSource: 'file'
    templateFile: 'IaC-Automation/Modules/Storage/S3/Template.yml'
    templateParametersFile: '$(RepoName)/Modules/Storage/S3/Parameter.json'
    capabilityAutoExpand: true

- task: CloudFormationCreateOrUpdateStack@1
  displayName: Secret Manager Template
  condition: eq('${{ variables.SecretManager}}', 'true')
  inputs:
    awsCredentials: '$(ServiceConnection)'
    regionName: 'us-east-1'
    stackName: '$(StackName)'
    templateSource: 'file'
    templateFile: 'IaC-Automation/Modules/Security/SecretManager/Template.yml'
    templateParametersFile: '$(RepoName)/Modules/Security/SecretManager/Parameter.json'
    capabilityAutoExpand: true

- task: CloudFormationCreateOrUpdateStack@1
  displayName: VPC Template
  condition: eq('${{ variables.VPC}}', 'true')
  inputs:
    awsCredentials: '$(ServiceConnection)'
    regionName: 'us-east-1'
    stackName: '$(StackName)'
    templateSource: 'file'
    templateFile: 'IaC-Automation/Modules/Networking/VPC/Template.yml'
    templateParametersFile: '$(RepoName)/Modules/Networking/VPC/Parameter.json'
    capabilityAutoExpand: true

- task: CloudFormationCreateOrUpdateStack@1
  displayName: SNS Template
  condition: eq('${{ variables.SNS}}', 'true')
  inputs:
    awsCredentials: '$(ServiceConnection)'
    regionName: 'us-east-1'
    stackName: '$(StackName)'
    templateSource: 'file'
    templateFile: 'IaC-Automation/Modules/Notification/SNS/Template.yml'
    templateParametersFile: '$(RepoName)/Modules/Notification/SNS/Parameter.json'
    capabilityAutoExpand: true

- task: CloudFormationCreateOrUpdateStack@1
  displayName: Lambda Template
  condition: eq('${{ variables.Lambda}}', 'true')
  inputs:
    awsCredentials: '$(ServiceConnection)'
    regionName: 'us-east-1'
    stackName: '$(StackName)'
    templateSource: 'file'
    templateFile: 'IaC-Automation/Modules/Compute/Lambda/Template.json'
    templateParametersFile: '$(RepoName)/Modules/Compute/Lambda/Parameter.json'
    capabilityAutoExpand: true

- task: CloudFormationCreateOrUpdateStack@1
  displayName: Athena WG Template
  condition: eq('${{ variables.AtehnaWG}}', 'true')
  inputs:
    awsCredentials: '$(ServiceConnection)'
    regionName: 'us-east-1'
    stackName: '$(StackName)'
    templateSource: 'file'
    templateFile: 'IaC-Automation/Modules/Analytics/AthenaWorkgroup/Template.json'
    templateParametersFile: '$(RepoName)/Modules/Analytics/AthenaWorkgroup/Parameter.json'
    capabilityAutoExpand: true

- task: CloudFormationCreateOrUpdateStack@1
  displayName: Athena WG Template
  condition: eq('${{ variables.GlueJob}}', 'true')
  inputs:
    awsCredentials: '$(ServiceConnection)'
    regionName: 'us-east-1'
    stackName: '$(StackName)'
    templateSource: 'file'
    templateFile: 'IaC-Automation/Modules/Analytics/GlueJob/Template.yml'
    templateParametersFile: '$(RepoName)/Modules/Analytics/GlueJob/Parameter.json'
    capabilityAutoExpand: true